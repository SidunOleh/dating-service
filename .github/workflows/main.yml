on:
  push: 
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

      - run:  cp .env.testing .env && php artisan key:generate --env=testing

      - run: |
          php artisan migrate --env=testing
          php artisan test --env=testing

  build-and-deploy:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

      - run: |
          cp .env.example .env
          sed -i 's/APP_NAME=Laravel/APP_NAME="${{ secrets.APP_NAME }}"/g' .env
          sed -i 's/APP_ENV=local/APP_ENV="${{ secrets.APP_ENV }}"/g' .env
          sed -i 's/APP_DEBUG=true/APP_DEBUG=${{ secrets.APP_DEBUG }}/g' .env
          sed -i 's|APP_URL=http://localhost|APP_URL=${{ secrets.APP_URL }}|g' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=${{ secrets.DB_HOST }}/g' .env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=${{ secrets.DB_DATABASE }}/g' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=${{ secrets.DB_USERNAME }}/g' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/g' .env
          sed -i 's/MAIL_HOST=mailpit/MAIL_HOST=${{ secrets.MAIL_HOST }}/g' .env
          sed -i 's/MAIL_PORT=1025/MAIL_PORT=${{ secrets.MAIL_PORT }}/g' .env
          sed -i 's/MAIL_USERNAME=null/MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}/g' .env
          sed -i 's/MAIL_PASSWORD=null/MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"/g' .env
          sed -i 's/MAIL_FROM_ADDRESS="hello@example.com"/MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }}/g' .env
          sed -i 's/PLISIO_SECRET_KEY=/PLISIO_SECRET_KEY=${{ secrets.PLISIO_SECRET_KEY }}/g' .env
          sed -i 's/RECAPTCHA_SITE_KEY=/RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}/g' .env
          sed -i 's/RECAPTCHA_SECRET_KEY=/RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}/g' .env
          sed -i 's/QUEUE_CONNECTION=sync/QUEUE_CONNECTION=${{ secrets.QUEUE_CONNECTION }}/g' .env

      - uses: actions/setup-node@v2
        with:
          node-version: '18'

      - run: |
          npm install
          npm run build
          npm run bundle-js
          rm -rf node_modules

      - uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: './'
          target: '/var/www/date'

      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
              cd /var/www/date
              chown -R www-data:www-data .
              find . -type d -exec chmod 755 {} \;
              chmod -R 775 storage bootstrap/cache
              find . -type f -exec chmod 644 {} \;
              php artisan key:generate
              php artisan migrate
              php artisan storage:link
              php artisan event:cache
              php artisan route:cache
              php artisan view:cache